<!DOCTYPE html>
<meta charset="utf-8" />
<title>Credible Testnet Explorer</title>

<!-- Latest compiled and minified CSS -->
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

<!-- jQuery library -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>

<!-- Latest compiled JavaScript -->
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>


<style>
        .box {
                border-style: outset;
                border-color:dodgerblue;
                height: 40px;
                line-height: 35px;
				padding-left: 5px;
        }
</style>
<!-- Websocket Script -->
<script language="javascript" type="text/javascript">

var wsUri = "ws://credible-1.testnet.smartpesa.com:9985/api/v1/streams/valid_transactions";
var output;
var alertbox;

function init()
{
        output = document.getElementById("output");
        alertbox = document.getElementById("alert-box");
        setWebSocket();
}

function setWebSocket()
{
        websocket = new WebSocket(wsUri);
        websocket.onopen = function(evt) { onOpen(evt) };
        websocket.onclose = function(evt) { onClose(evt) };
        websocket.onmessage = function(evt) { onMessage(evt) };
        websocket.onerror = function(evt) { onError(evt) };
}

function onOpen(evt)
{
        console.log("onOpen: ", evt);
        writeAlertMessage("CONNECTED");
}

function onClose(evt)
{
        console.log("onClose: ");
        writeAlertMessage("DISCONNECTED");
}

function onMessage(evt)
{
        console.log("onMessage: ", evt);
		let data = evt.data;
		try {
			let json = JSON.parse(evt.data);
			data = json.transaction_id != undefined ? json.transaction_id : data;
		} catch (error) {
			
		}
        writeToScreen(data);
}

function onError(evt)
{
        console.log("onError: ", evt);
        writeToScreen('<span style="color: red;">ERROR:</span> ' + evt.data);
}

function closeConnection(evt)
{
        console.log("closeConnection: ", evt);
        websocket.close()
}

function writeToScreen(message)
{
        $("#last_transaction").prepend('<p style="word-wrap: break-word;border-bottom:1px solid dodgerblue;margin:3px;margin-left:5px;" >' + message + '</p>');
}

function writeAlertMessage(message)
{
        var alert = document.createElement("div");
        alert.className = "alert alert-success";
        alert.setAttribute("role", "alert");
        alert.innerHTML = message;
        alertbox.appendChild(alert);
}

/* Initialize websocket and attach all events */
window.addEventListener("load", init, false);

/* Event called on closing browser or refreshing page to close connection */
window.addEventListener("beforeunload", closeConnection, false);

</script>

<!-- HTML Template -->
<body>
<div class="container" style="height: 100%;">
        <div class="row">
                <img class="logo logo-dark" alt="logo" src="images/logo.png">
                <h3>Credible Valid Transactions</h3>
                <!-- Box for displaying all alerts -->
                <div id="alert-box"></div>
                <!-- Div for attachting all outputs -->
                <div id="output" class="list-group"></div>
        </div>
        
        <div class="row">
                <div class="float-left col-sm-7" style="height: 500px;" >
                        <h3>Last transactions</h3>
                        <div id="last_transaction" style="height: 100%;border-style: outset;border-color:dodgerblue;overflow-y: auto">
                        </div>
                </div>
                
                <div class="float-right col-sm-5">
                        <h3>Page latency</h3>
                        <p class="box">Round-trip</p>
                </div>
                
                <div class="float-right col-sm-5">
                        <h3># Of Peers</h3>
                        <p class="box">credible-1</p>
                        <p class="box">credible-2</p>
                        <p class="box">credible-3</p>
                </div>
        </div>
</div>
</body>